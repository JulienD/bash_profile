# Hello_world.
echo Bonjour $USER, nous sommes le `date +"%A %e %B %Y"`, et il est : `date +"%H"` h `date +"%M"`

#-------------------------------------------------------------
# Some settings
#-------------------------------------------------------------

# Enable options:

# Disable options:
## Don't want my shell to warn me of incoming mail.
shopt -u mailwarn
unset MAILCHECK


#-------------------------------------------------------------
# Bash history
#-------------------------------------------------------------

# Enable bash history.
set -o history
# History length.
HISTSIZE=1000
# Bash history file length.
HISTFILESIZE=10000
# Don't put duplicate lines in the history. See bash(1) for more 
# options or force ignoredups and ignorespace.
HISTCONTROL=ignoredups:ignorespaec
# Append the history to the histfile instead of overwriting it.
shopt -s histappend
# Update & re-read histfile after every cmd so terminals will share.
export PROMPT_COMMAND="history -n; history -a"


#-------------------------------------------------------------
# Terminal colors
#-------------------------------------------------------------
# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    # We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
  set_green='\[\033[01;32m\]'
  set_yellow='\[\033[1;33m\]'
  set_red='\[\033[0;31m\]'
  set_blue='\[\033[01;34m\]'
  reset='\[\033[00m\]'
  PS1="${debian_chroot:+($debian_chroot)}$set_green\u$set_yellow@$set_red\h$reset:$set_blue\w$reset\$ "
else
  PS1="${debian_chroot:+($debian_chroot)}\u@\h:\w\$ "
fi
unset color_prompt force_color_prompt

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

#-------------------------------------------------------------
# Terminal properties
#-------------------------------------------------------------

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# Check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
    xterm) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
# We have color support; assume it's compliant with Ecma-48
# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
# a case would tend to support setf rather than setaf.)
color_prompt=yes
    else
color_prompt=
    fi
fi



#-------------------------------------------------------------
# Alias definitions
#-------------------------------------------------------------
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

#-------------------------------------------------------------
# Generic Aliases
#-------------------------------------------------------------

alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'

alias mkdir='mkdir -p'
alias h='history'

alias du='du -kh'
alias df='df -kTh'


#-------------------------------------------------------------
# ls aliases
#-------------------------------------------------------------
alias ll="ls -l --group-directories-first"
alias ls='ls -hF --color' # add colors for filetype recognition
alias la='ls -ah'         # show hidden files
alias lx='ls -lXBh'       # sort by extension
alias lk='ls -lSh'        # sort by size, biggest last
alias lt='ls -lth'        # sort by date, most recent first
alias ltr='ls -ltrh'      # sort by date, most recent last


#-------------------------------------------------------------
# spelling typos
#-------------------------------------------------------------

alias xs='cd'
alias vf='cd'
alias moer='more'
alias moew='more'
alias kk='ll'
alias cd..='cd ..' 


#-------------------
# Personnal Aliases
#-------------------

#-------------------------------------------------------------
# git branch identification
#-------------------------------------------------------------

# Make git branch info available in the prompt.
# See ~/.git-completion.bash for more info.
source ~/.git-completion.bash
export GIT_PS1_SHOWDIRTYSTATE="yes"
export GIT_PS1_SHOWUNTRACKEDFILES="yes"
#export GIT_PS1_SHOWSTASHSTATE="yes"
#export GIT_PS1_SHOWUPSTREAM="yes"

# Generate prompt.
if [ "$color_prompt" = yes ]; then
    PS1_CHROOT='${debian_chroot:+($debian_chroot)}\[\033[01;34m\]\u@\h\[\033[00m\]:'
    PS1_CWD='\[\033[01;32m\]\w'
    PSI_GIT_BRANCH='\[\033[00;36m\]$(__git_ps1 "(%s)")'
    PS1_TRAIL='\[\033[00m\] > '
else
    PS1_CHROOT='${debian_chroot:+($debian_chroot)}\u@\h:'
    PS1_CWD='\w'
    PSI_GIT_BRANCH='$(__git_ps1 "(%s)")'
    PS1_TRAIL=' > '
fi
PS1="$PS1_CHROOT$PS1_CWD$PSI_GIT_BRANCH$PS1_TRAIL"
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac